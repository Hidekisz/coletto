name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_IMAGE: seu-usuario/seu-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checando o código
        uses: actions/checkout@v3

      - name: Configurando o Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Instalando o Maven
        uses: actions/setup-java@v3
        with:
          java-package: jdk
          java-version: '17'

      - name: Compilando a aplicação
        run: mvn clean package -DskipTests

      - name: Construindo a imagem Docker
        run: docker build -t $DOCKER_IMAGE:${{ github.sha }} .

      - name: Logando no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Pushing a imagem para o Docker Hub
        run: docker push $DOCKER_IMAGE:${{ github.sha }}

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Conectando ao servidor de staging
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          password: ${{ secrets.STAGING_PASSWORD }}
          script: |
            docker pull $DOCKER_IMAGE:${{ github.sha }}
            docker stop app || true
            docker rm app || true
            docker run -d -p 8080:8080 --name app --env MONGO_URI=mongodb+srv://AnnyGuio:Acarol1%40@cluster0.9nqdx.mongodb.net/agendamento?retryWrites=true&w=majority $DOCKER_IMAGE:${{ github.sha }}

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Conectando ao servidor de produção
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          password: ${{ secrets.PRODUCTION_PASSWORD }}
          script: |
            docker pull $DOCKER_IMAGE:${{ github.sha }}
            docker stop app || true
            docker rm app || true
            docker run -d -p 8080:8080 --name app --env MONGO_URI=mongodb+srv://AnnyGuio:Acarol1%40@cluster0.9nqdx.mongodb.net/agendamento?retryWrites=true&w=majority $DOCKER_IMAGE:${{ github.sha }}
